let authToken;try{authToken=window.webpackChunkdiscord_app.push([[Math.random()],{},e=>{if(e.c)for(const n of Object.keys(e.c).map((n=>e.c[n].exports)).filter((e=>e))){if(n.default&&void 0!==n.default.getToken)return n.default.getToken();if(void 0!==n.getToken)return n.getToken()}return null}]),window.webpackChunkdiscord_app.pop()}catch(e){throw console.error("Failed to extract auth token:",e),alert("Failed to obtain Discord authorization token. The script cannot run.  Ensure you are logged into Discord in your browser."),e}if(!authToken)throw alert("Could not retrieve Discord auth token.  Ensure you are logged in."),new Error("Authentication token is missing.");const channelId=window.location.pathname.split("/")[3];if(!channelId)throw alert("Invalid channel ID.  Please run this script in a Discord channel."),new Error("Channel ID is missing.");async function fetchUserInfo(){try{const e=await fetch("https://discord.com/api/v9/users/@me",{headers:{accept:"*/*","accept-language":"en-US,en;q=0.9",authorization:authToken,"content-type":"application/json"},method:"GET",mode:"cors",credentials:"include"});if(!e.ok)throw new Error(`Failed to fetch user info: ${e.status} ${e.statusText}`);const n=await e.json();return{id:n.id,username:n.global_name||n.username}}catch(e){throw console.error("Error fetching user info:",e),e}}async function fetchMessageCount(e,n){try{const t=await fetch(`https://discord.com/api/v9/channels/${channelId}/messages/search?min_id=0&author_id=${e}`,{headers:{accept:"*/*","accept-language":"en-US,en;q=0.9",authorization:authToken,"content-type":"application/json"},method:"GET",mode:"cors",credentials:"include"});if(!t.ok)throw new Error(`Failed to fetch message count for user ${n}: ${t.status} ${t.statusText}`);return{username:n,userId:e,messageCount:(await t.json()).total_results}}catch(e){throw console.error(`Error fetching message count for ${n}:`,e),e}}async function sendLeaderboardMessage(e){try{const n=await fetch(`https://discord.com/api/v9/channels/${channelId}/messages`,{headers:{accept:"*/*","accept-language":"en-US,en;q=0.9",authorization:authToken,"content-type":"application/json"},body:JSON.stringify(e),method:"POST",mode:"cors",credentials:"include"});if(!n.ok)throw new Error(`Failed to send message: ${n.status} ${n.statusText}`);return n}catch(e){throw console.error("Error sending message:",e),e}}async function processDirectMessageLeaderboard(e){if(!e||!e.channels||0===e.channels.length){const e="Invalid data structure for direct message channel.";return console.error(e),Promise.reject(new Error(e))}const n=await fetchUserInfo(),t=n.id,r=n.username,o=e.channels[0].recipients?.find((e=>e.id!==t));if(!o){const e="No other user found in this direct message channel.";return console.warn(e),sendLeaderboardMessage({content:e,tts:!1})}const s=e.total_results,a=[fetchMessageCount(t,r),fetchMessageCount(o.id,o.global_name||o.username)];try{const e=await Promise.all(a);e.sort(((e,n)=>n.messageCount-e.messageCount));let n=s;e.forEach((e=>{n-=e.messageCount}));let t=`**DM with ${o.global_name||o.username}**\n**Total messages:** ${s}\n\n**Leaderboard:** 🏆\n`;if(e.forEach(((e,n)=>{const r=(e.messageCount/s*100).toFixed(1);t+=`${n+1}. **${e.username}**: ${e.messageCount} (${r}%)\n`})),n>0){const e=(n/s*100).toFixed(1);t+=`-# Other: ${n} (${e}%)\n`}const r={content:t,tts:!1};return await sendLeaderboardMessage(r)}catch(e){throw console.error("Error processing DM leaderboard:",e),e}}async function processGroupMessageLeaderboard(e){if(!e||!e.channels||0===e.channels.length){const e="Invalid data structure for group message channel.";return console.error(e),Promise.reject(new Error(e))}const n=e.channels[0].name,t=e.total_results,r=e.channels[0].recipients;return fetchUserInfo().then((e=>{const o=e.id,s=e.username,a=[],c=(r||[]).map((async e=>{const n=e.global_name||e.username;try{const t=await fetchMessageCount(e.id,n);return a.push(t)}catch(e){return console.error(`Error fetching message count for ${n}:`,e)}}));return c.push(fetchMessageCount(o,s).then((e=>a.push(e))).catch((e=>console.error("Error fetching message count for self:",e)))),Promise.all(c).then((()=>{if(0===a.length){const e="No messages found in this group channel.";return console.warn(e),sendLeaderboardMessage({content:e,tts:!1})}a.sort(((e,n)=>n.messageCount-e.messageCount));let e=t;a.forEach((n=>{e-=n.messageCount}));let r=`**Group Name:** ${n}\n**Total messages:** ${t}\n\n**Leaderboard:** 🏆\n`;if(a.forEach(((e,n)=>{const o=(e.messageCount/t*100).toFixed(1);r+=`${n+1}. **${e.username}**: ${e.messageCount} (${o}%)\n`})),e>0){const n=(e/t*100).toFixed(1);r+=`-# Other: ${e} (${n}%)\n`}return sendLeaderboardMessage({content:r,tts:!1})})).catch((e=>{throw console.error("Error processing group leaderboard:",e),e}))}))}fetch(`https://discord.com/api/v9/channels/${channelId}/messages/search?min_id=0`,{headers:{accept:"*/*","accept-language":"en-US,en;q=0.9",authorization:authToken,"content-type":"application/json","x-debug-options":"bugReporterEnabled","x-discord-locale":"en-US","x-discord-timezone":"Europe/Paris"},method:"GET",mode:"cors",credentials:"include"}).then((e=>{if(!e.ok)throw new Error(`Failed to fetch channel data: ${e.status} ${e.statusText}`);return e.json()})).then((e=>{if(!e||!e.channels||0===e.channels.length)throw new Error("Invalid or empty channel data received.");return 1===e.channels[0].type?processDirectMessageLeaderboard(e):processGroupMessageLeaderboard(e)})).catch((e=>{console.error("Error fetching channel data:",e),alert(`An error occurred: ${e.message}.  Please check the console for details.`)}));